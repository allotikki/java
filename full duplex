Aim: Full duplex Chat using TCP/IP
GIVEN REQUIREMENTS: There are two hosts, Client and Server. Both the Client and
the Server exchange message i.e. they send messages or receive message from the
other. There is a two way communication between them.
OBJECTIVE:
To implement a half duplex application, where the Client establishes a connection with
the Server. The Client and server can send and receive the messages at the same time.
METHODOLOGY:
Server:
• Include the necessary header files.
• Create a socket using socket function with family AF_INET, type as SOCK_STREAM.
• Initialize server address to 0 using the bzero function.
• Assign the sin_family to AF_INET, sin_addr to INADDR_ANY, sin_port to dynamically
assigned port number.
• Bind the local host address to socket using the bind function.
• Listen on the socket for connection request from the client.
• Accept connection request from the Client using accept function.
• Fork the process to receive message from the client and print it on the console. Read
message from the console and send it to the client.
Client:
• Include the necessary header files.
• Create a socket using socket function with family AF_INET, type as SOCK_STREAM.
• Initialize server address to 0 using the bzero function.
• Assign the sin_family to AF_INET.
• Get the server IP address and the Port number from the console.
• Using gethostbyname function assign it to a hostent structure, and assign it to
sin_addr of the server address structure.
• Request a connection from the server using the connect function.
• Fork the process to receive message from the server and print it on the console. Read
message from the console and send it to the server
Code
Client :
import socket
cl-socket.socket()
host-socket.gethostname()
port=6666

18

cl.connect((host, port))
nam=input("Enter the message:")
cl.send(bytes(nam, ‘utf-8'))
print("CLIENT: ",nam)
p=cl.recv(1024).decode()
print (p)
Server:
import socket
s=socket.socket() print("socket created")
host=socket.gethostname()
port=6666 s.bind((host, port))
s.listen(11)
print("waiting") while True:
cl,addr=s.accept() print("connected with client", addr)
k=cl.recv(1024).decode().
if(k=='PING' or k=='ping'):
m='SERVER: PONG'
else:
m=SERVER DROPPED' cl.send(bytes (m, 'utf-8'))
cl.close()
OUTPUT:

Result : Thus have successfully Created a Full Duplex Chat Bot using TCP/IP
