Aim: Concurrent TCP/IP Day Time Server.
GIVEN REQUIREMENTS: There are two hosts, Client and Server. The Client requests
the concurrent server for the date and time. The Server sends the date and time, which
the Client accepts and prints.
OBJECTIVE:
To implement a TCP/IP day time server (concurrent server) that handles multiple client
requests.
Once the client establishes connection with the server, the server sends its day-time
details to the client which the
client prints in its console.
METHODOLOGY:
Server:
• Include the necessary header files.
• Create a socket using socket function with family AF_INET, type as
SOCK_STREAM.
• Initialize server address to 0 using the bzero function.
• Assign the sin_family to AF_INET, sin_addr to INADDR_ANY, sin_port to statically
assigned port number.
• Bind the local host address to socket using the bind function.
• Within a for loop, accept connection request from the client using accept function.
• Use the fork system call to spawn the processes.
• Calculate the current date and time using the ctime() function. Change the format so
that it is appropriate for human readable form and send the date and time to the client
using the write function.
Client:
• Include the necessary header files.
• Create a socket using socket function with family AF_INET, type as
SOCK_STREAM.
• Initialize server address to 0 using the bzero function.
• Assign the sin_family to AF_INET.
• Get the server IP address from the console.
• Using gethostbyname function assign it to a hostent structure, and assign it to
sin_addr of the server
address structure.
• Request a connection from the server using the connect function.
• Within an infinite loop, receive the date and time from the server using the read
function and print the date and time on the console.

14

CODE:
SERVER
# server.py
import socket
import time
serversocket = socket.socket(
socket.AF_INET, socket.SOCK_STREAM)
host = socket.gethostname()
port = 9999
serversocket.bind((host, port))
serversocket.listen(5)
while True:
clientsocket,addr = serversocket.accept()
print("Got a connection from %s" % str(addr))
currentTime = time.ctime(time.time()) + "\r\n"
clientsocket.send(currentTime.encode('ascii'))
clientsocket.close()
CLIENT
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
port = 9999
s.close()
print("The time got from the server is %s" % tm.decode('ascii'))
OUTPUT

Result : Concurrent TCP/IP Day Time Server. Was established successfully
